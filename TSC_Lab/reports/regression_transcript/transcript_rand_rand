# 1
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5c Compiler 2017.01 Jan 23 2017
# Start time: 23:07:22 on Apr 22,2024
# vlog -sv -timescale 1ps/1ps -work work -f sources.txt 
# -- Compiling package instr_register_pkg
# -- Compiling module instr_register
# -- Importing package instr_register_pkg
# -- Compiling module instr_register_test
# -- Compiling module top
# 
# Top level modules:
# 	top
# End time: 23:07:22 on Apr 22,2024, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -novopt -quiet -nocoverage "+notimingchecks" "+nowarnTSCALE" -sva top -GWR_ORDER=1 -GWR_NR=50 -GRD_NR=50 -Gseed_nou=rand_rand -GRR_ORDER=1 
# Start time: 23:07:22 on Apr 22,2024
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET). YOU DON'T ***
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION, ***
# ***            EVERYTHING IS AUTOMATED                  ***
# ***********************************************************
# 
# 
# Reseting the instruction register...
# 
# Writing values to register stack...
# valori inainainte 
# opcode  7
# operand_a           2
# operand_b           9
# Writing to register location 14: 
#   opcode = 7 (MOD)
#   operand_a = 2
#   operand_b = 9
# 
# valori inainainte 
# opcode  3
# operand_a          -7
# operand_b          10
# Writing to register location 12: 
#   opcode = 3 (ADD)
#   operand_a = -7
#   operand_b = 10
# 
# valori inainainte 
# opcode  2
# operand_a          -6
# operand_b          14
# Writing to register location 23: 
#   opcode = 2 (PASSB)
#   operand_a = -6
#   operand_b = 14
# 
# valori inainainte 
# opcode  8
# operand_a          14
# operand_b          12
# Writing to register location 26: 
#   opcode = 8 (POW)
#   operand_a = 14
#   operand_b = 12
# 
# valori inainainte 
# opcode  8
# operand_a          -4
# operand_b           7
# Writing to register location 22: 
#   opcode = 8 (POW)
#   operand_a = -4
#   operand_b = 7
# 
# valori inainainte 
# opcode  1
# operand_a          -9
# operand_b          10
# Writing to register location 8: 
#   opcode = 1 (PASSA)
#   operand_a = -9
#   operand_b = 10
# 
# valori inainainte 
# opcode  6
# operand_a          -6
# operand_b           6
# Writing to register location 30: 
#   opcode = 6 (DIV)
#   operand_a = -6
#   operand_b = 6
# 
# valori inainainte 
# opcode  2
# operand_a           6
# operand_b           8
# Writing to register location 18: 
#   opcode = 2 (PASSB)
#   operand_a = 6
#   operand_b = 8
# 
# valori inainainte 
# opcode  4
# operand_a           8
# operand_b          14
# Writing to register location 18: 
#   opcode = 4 (SUB)
#   operand_a = 8
#   operand_b = 14
# 
# valori inainainte 
# opcode  0
# operand_a          -2
# operand_b           2
# Writing to register location 2: 
#   opcode = 0 (ZERO)
#   operand_a = -2
#   operand_b = 2
# 
# valori inainainte 
# opcode  7
# operand_a         -14
# operand_b           2
# Writing to register location 26: 
#   opcode = 7 (MOD)
#   operand_a = -14
#   operand_b = 2
# 
# valori inainainte 
# opcode  6
# operand_a           2
# operand_b           2
# Writing to register location 25: 
#   opcode = 6 (DIV)
#   operand_a = 2
#   operand_b = 2
# 
# valori inainainte 
# opcode  2
# operand_a         -14
# operand_b          10
# Writing to register location 8: 
#   opcode = 2 (PASSB)
#   operand_a = -14
#   operand_b = 10
# 
# valori inainainte 
# opcode  4
# operand_a          10
# operand_b           9
# Writing to register location 13: 
#   opcode = 4 (SUB)
#   operand_a = 10
#   operand_b = 9
# 
# valori inainainte 
# opcode  0
# operand_a           9
# operand_b           8
# Writing to register location 6: 
#   opcode = 0 (ZERO)
#   operand_a = 9
#   operand_b = 8
# 
# valori inainainte 
# opcode  4
# operand_a           8
# operand_b          13
# Writing to register location 8: 
#   opcode = 4 (SUB)
#   operand_a = 8
#   operand_b = 13
# 
# valori inainainte 
# opcode  6
# operand_a          13
# operand_b           6
# Writing to register location 19: 
#   opcode = 6 (DIV)
#   operand_a = 13
#   operand_b = 6
# 
# valori inainainte 
# opcode  7
# operand_a         -10
# operand_b           8
# Writing to register location 9: 
#   opcode = 7 (MOD)
#   operand_a = -10
#   operand_b = 8
# 
# valori inainainte 
# opcode  4
# operand_a          -8
# operand_b           3
# Writing to register location 26: 
#   opcode = 4 (SUB)
#   operand_a = -8
#   operand_b = 3
# 
# valori inainainte 
# opcode  4
# operand_a           3
# operand_b           9
# Writing to register location 8: 
#   opcode = 4 (SUB)
#   operand_a = 3
#   operand_b = 9
# 
# valori inainainte 
# opcode  2
# operand_a           9
# operand_b          10
# Writing to register location 19: 
#   opcode = 2 (PASSB)
#   operand_a = 9
#   operand_b = 10
# 
# valori inainainte 
# opcode  0
# operand_a          10
# operand_b           8
# Writing to register location 1: 
#   opcode = 0 (ZERO)
#   operand_a = 10
#   operand_b = 8
# 
# valori inainainte 
# opcode  3
# operand_a          -8
# operand_b           3
# Writing to register location 7: 
#   opcode = 3 (ADD)
#   operand_a = -8
#   operand_b = 3
# 
# valori inainainte 
# opcode  0
# operand_a         -13
# operand_b           1
# Writing to register location 11: 
#   opcode = 0 (ZERO)
#   operand_a = -13
#   operand_b = 1
# 
# valori inainainte 
# opcode  7
# operand_a         -15
# operand_b           7
# Writing to register location 4: 
#   opcode = 7 (MOD)
#   operand_a = -15
#   operand_b = 7
# 
# valori inainainte 
# opcode  5
# operand_a          -9
# operand_b          11
# Writing to register location 23: 
#   opcode = 5 (MULT)
#   operand_a = -9
#   operand_b = 11
# 
# valori inainainte 
# opcode  8
# operand_a          11
# operand_b           4
# Writing to register location 13: 
#   opcode = 8 (POW)
#   operand_a = 11
#   operand_b = 4
# 
# valori inainainte 
# opcode  7
# operand_a         -12
# operand_b           7
# Writing to register location 15: 
#   opcode = 7 (MOD)
#   operand_a = -12
#   operand_b = 7
# 
# valori inainainte 
# opcode  0
# operand_a           7
# operand_b          13
# Writing to register location 15: 
#   opcode = 0 (ZERO)
#   operand_a = 7
#   operand_b = 13
# 
# valori inainainte 
# opcode  0
# operand_a          -3
# operand_b          15
# Writing to register location 14: 
#   opcode = 0 (ZERO)
#   operand_a = -3
#   operand_b = 15
# 
# valori inainainte 
# opcode  3
# operand_a          -1
# operand_b          15
# Writing to register location 18: 
#   opcode = 3 (ADD)
#   operand_a = -1
#   operand_b = 15
# 
# valori inainainte 
# opcode  3
# operand_a          15
# operand_b          14
# Writing to register location 27: 
#   opcode = 3 (ADD)
#   operand_a = 15
#   operand_b = 14
# 
# valori inainainte 
# opcode  7
# operand_a          14
# operand_b           2
# Writing to register location 21: 
#   opcode = 7 (MOD)
#   operand_a = 14
#   operand_b = 2
# 
# valori inainainte 
# opcode  7
# operand_a           2
# operand_b          11
# Writing to register location 4: 
#   opcode = 7 (MOD)
#   operand_a = 2
#   operand_b = 11
# 
# valori inainainte 
# opcode  4
# operand_a          11
# operand_b           5
# Writing to register location 3: 
#   opcode = 4 (SUB)
#   operand_a = 11
#   operand_b = 5
# 
# valori inainainte 
# opcode  8
# operand_a         -11
# operand_b           4
# Writing to register location 17: 
#   opcode = 8 (POW)
#   operand_a = -11
#   operand_b = 4
# 
# valori inainainte 
# opcode  6
# operand_a           4
# operand_b           3
# Writing to register location 7: 
#   opcode = 6 (DIV)
#   operand_a = 4
#   operand_b = 3
# 
# valori inainainte 
# opcode  8
# operand_a         -13
# operand_b           1
# Writing to register location 9: 
#   opcode = 8 (POW)
#   operand_a = -13
#   operand_b = 1
# 
# valori inainainte 
# opcode  4
# operand_a         -15
# operand_b           7
# Writing to register location 5: 
#   opcode = 4 (SUB)
#   operand_a = -15
#   operand_b = 7
# 
# valori inainainte 
# opcode  4
# operand_a           7
# operand_b           9
# Writing to register location 9: 
#   opcode = 4 (SUB)
#   operand_a = 7
#   operand_b = 9
# 
# valori inainainte 
# opcode  3
# operand_a          -7
# operand_b           5
# Writing to register location 0: 
#   opcode = 3 (ADD)
#   operand_a = -7
#   operand_b = 5
# 
# valori inainainte 
# opcode  2
# operand_a           5
# operand_b           9
# Writing to register location 18: 
#   opcode = 2 (PASSB)
#   operand_a = 5
#   operand_b = 9
# 
# valori inainainte 
# opcode  1
# operand_a           9
# operand_b           0
# Writing to register location 4: 
#   opcode = 1 (PASSA)
#   operand_a = 9
#   operand_b = 0
# 
# valori inainainte 
# opcode  1
# operand_a           0
# operand_b           2
# Writing to register location 21: 
#   opcode = 1 (PASSA)
#   operand_a = 0
#   operand_b = 2
# 
# valori inainainte 
# opcode  0
# operand_a           2
# operand_b           4
# Writing to register location 29: 
#   opcode = 0 (ZERO)
#   operand_a = 2
#   operand_b = 4
# 
# valori inainainte 
# opcode  3
# operand_a         -12
# operand_b           5
# Writing to register location 17: 
#   opcode = 3 (ADD)
#   operand_a = -12
#   operand_b = 5
# 
# valori inainainte 
# opcode  2
# operand_a           5
# operand_b          13
# Writing to register location 28: 
#   opcode = 2 (PASSB)
#   operand_a = 5
#   operand_b = 13
# 
# valori inainainte 
# opcode  6
# operand_a          -3
# operand_b           1
# Writing to register location 21: 
#   opcode = 6 (DIV)
#   operand_a = -3
#   operand_b = 1
# 
# valori inainainte 
# opcode  8
# operand_a           1
# operand_b          12
# Writing to register location 18: 
#   opcode = 8 (POW)
#   operand_a = 1
#   operand_b = 12
# 
# valori inainainte 
# opcode  6
# operand_a          -4
# operand_b           5
# Writing to register location 1: 
#   opcode = 6 (DIV)
#   operand_a = -4
#   operand_b = 5
# 
# 
# Reading back the same register locations written...
# Read from register location 0: 
#   opcode = 3 (ADD)
#   operand_a = -7
#   operand_b = 5
# 
#   result    = -2
#   bit_semn = 1
# 
# rezultatul nostru:                    -2
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 1
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 1: 
#   opcode = 6 (DIV)
#   operand_a = -4
#   operand_b = 5
# 
#   result    = 0
#   bit_semn = 0
# 
# rezultatul nostru:                     0
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 2
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 2: 
#   opcode = 0 (ZERO)
#   operand_a = -2
#   operand_b = 2
# 
#   result    = 0
#   bit_semn = 0
# 
# rezultatul nostru:                     0
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 3
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 3: 
#   opcode = 4 (SUB)
#   operand_a = 11
#   operand_b = 5
# 
#   result    = 6
#   bit_semn = 0
# 
# rezultatul nostru:                     6
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 4
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 4: 
#   opcode = 1 (PASSA)
#   operand_a = 9
#   operand_b = 0
# 
#   result    = 9
#   bit_semn = 0
# 
# rezultatul nostru:                     9
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 5
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 5: 
#   opcode = 4 (SUB)
#   operand_a = -15
#   operand_b = 7
# 
#   result    = -22
#   bit_semn = 1
# 
# rezultatul nostru:                   -22
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 6
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 6: 
#   opcode = 0 (ZERO)
#   operand_a = 9
#   operand_b = 8
# 
#   result    = 0
#   bit_semn = 0
# 
# rezultatul nostru:                     0
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 7
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 7: 
#   opcode = 6 (DIV)
#   operand_a = 4
#   operand_b = 3
# 
#   result    = 1
#   bit_semn = 0
# 
# rezultatul nostru:                     1
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 8
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 8: 
#   opcode = 4 (SUB)
#   operand_a = 3
#   operand_b = 9
# 
#   result    = -6
#   bit_semn = 1
# 
# rezultatul nostru:                    -6
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 9
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 9: 
#   opcode = 4 (SUB)
#   operand_a = 7
#   operand_b = 9
# 
#   result    = -2
#   bit_semn = 1
# 
# rezultatul nostru:                    -2
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 10
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 10: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   result    = 0
#   bit_semn = 0
# 
# rezultatul nostru:                     0
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 11
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 11: 
#   opcode = 0 (ZERO)
#   operand_a = -13
#   operand_b = 1
# 
#   result    = 0
#   bit_semn = 0
# 
# rezultatul nostru:                     0
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 12
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 12: 
#   opcode = 3 (ADD)
#   operand_a = -7
#   operand_b = 10
# 
#   result    = 3
#   bit_semn = 0
# 
# rezultatul nostru:                     3
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 13
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 13: 
#   opcode = 8 (POW)
#   operand_a = 11
#   operand_b = 4
# 
#   result    = 14641
#   bit_semn = 0
# 
# rezultatul nostru:                 14641
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 14
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 14: 
#   opcode = 0 (ZERO)
#   operand_a = -3
#   operand_b = 15
# 
#   result    = 0
#   bit_semn = 0
# 
# rezultatul nostru:                     0
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 15
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 15: 
#   opcode = 0 (ZERO)
#   operand_a = 7
#   operand_b = 13
# 
#   result    = 0
#   bit_semn = 0
# 
# rezultatul nostru:                     0
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 16
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 16: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   result    = 0
#   bit_semn = 0
# 
# rezultatul nostru:                     0
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 17
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 17: 
#   opcode = 3 (ADD)
#   operand_a = -12
#   operand_b = 5
# 
#   result    = -7
#   bit_semn = 1
# 
# rezultatul nostru:                    -7
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 18
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 18: 
#   opcode = 8 (POW)
#   operand_a = 1
#   operand_b = 12
# 
#   result    = 1
#   bit_semn = 0
# 
# rezultatul nostru:                     1
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 19
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 19: 
#   opcode = 2 (PASSB)
#   operand_a = 9
#   operand_b = 10
# 
#   result    = 10
#   bit_semn = 0
# 
# rezultatul nostru:                    10
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 20
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 20: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   result    = 0
#   bit_semn = 0
# 
# rezultatul nostru:                     0
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 21
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 21: 
#   opcode = 6 (DIV)
#   operand_a = -3
#   operand_b = 1
# 
#   result    = -3
#   bit_semn = 1
# 
# rezultatul nostru:                    -3
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 22
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 22: 
#   opcode = 8 (POW)
#   operand_a = -4
#   operand_b = 7
# 
#   result    = -16384
#   bit_semn = 1
# 
# rezultatul nostru:                -16384
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 23
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 23: 
#   opcode = 5 (MULT)
#   operand_a = -9
#   operand_b = 11
# 
#   result    = -99
#   bit_semn = 1
# 
# rezultatul nostru:                   -99
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 24
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 24: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   result    = 0
#   bit_semn = 0
# 
# rezultatul nostru:                     0
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 25
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 25: 
#   opcode = 6 (DIV)
#   operand_a = 2
#   operand_b = 2
# 
#   result    = 1
#   bit_semn = 0
# 
# rezultatul nostru:                     1
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 26
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 26: 
#   opcode = 4 (SUB)
#   operand_a = -8
#   operand_b = 3
# 
#   result    = -11
#   bit_semn = 1
# 
# rezultatul nostru:                   -11
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 27
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 27: 
#   opcode = 3 (ADD)
#   operand_a = 15
#   operand_b = 14
# 
#   result    = 29
#   bit_semn = 0
# 
# rezultatul nostru:                    29
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 28
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 28: 
#   opcode = 2 (PASSB)
#   operand_a = 5
#   operand_b = 13
# 
#   result    = 13
#   bit_semn = 0
# 
# rezultatul nostru:                    13
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 29
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 29: 
#   opcode = 0 (ZERO)
#   operand_a = 2
#   operand_b = 4
# 
#   result    = 0
#   bit_semn = 0
# 
# rezultatul nostru:                     0
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 30
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 30: 
#   opcode = 6 (DIV)
#   operand_a = -6
#   operand_b = 6
# 
#   result    = -1
#   bit_semn = 1
# 
# rezultatul nostru:                    -1
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 31
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 31: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   result    = 0
#   bit_semn = 0
# 
# rezultatul nostru:                     0
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 32
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 0: 
#   opcode = 3 (ADD)
#   operand_a = -7
#   operand_b = 5
# 
#   result    = -2
#   bit_semn = 1
# 
# rezultatul nostru:                    -2
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 33
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 1: 
#   opcode = 6 (DIV)
#   operand_a = -4
#   operand_b = 5
# 
#   result    = 0
#   bit_semn = 0
# 
# rezultatul nostru:                     0
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 34
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 2: 
#   opcode = 0 (ZERO)
#   operand_a = -2
#   operand_b = 2
# 
#   result    = 0
#   bit_semn = 0
# 
# rezultatul nostru:                     0
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 35
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 3: 
#   opcode = 4 (SUB)
#   operand_a = 11
#   operand_b = 5
# 
#   result    = 6
#   bit_semn = 0
# 
# rezultatul nostru:                     6
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 36
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 4: 
#   opcode = 1 (PASSA)
#   operand_a = 9
#   operand_b = 0
# 
#   result    = 9
#   bit_semn = 0
# 
# rezultatul nostru:                     9
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 37
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 5: 
#   opcode = 4 (SUB)
#   operand_a = -15
#   operand_b = 7
# 
#   result    = -22
#   bit_semn = 1
# 
# rezultatul nostru:                   -22
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 38
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 6: 
#   opcode = 0 (ZERO)
#   operand_a = 9
#   operand_b = 8
# 
#   result    = 0
#   bit_semn = 0
# 
# rezultatul nostru:                     0
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 39
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 7: 
#   opcode = 6 (DIV)
#   operand_a = 4
#   operand_b = 3
# 
#   result    = 1
#   bit_semn = 0
# 
# rezultatul nostru:                     1
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 40
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 8: 
#   opcode = 4 (SUB)
#   operand_a = 3
#   operand_b = 9
# 
#   result    = -6
#   bit_semn = 1
# 
# rezultatul nostru:                    -6
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 41
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 9: 
#   opcode = 4 (SUB)
#   operand_a = 7
#   operand_b = 9
# 
#   result    = -2
#   bit_semn = 1
# 
# rezultatul nostru:                    -2
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 42
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 10: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   result    = 0
#   bit_semn = 0
# 
# rezultatul nostru:                     0
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 43
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 11: 
#   opcode = 0 (ZERO)
#   operand_a = -13
#   operand_b = 1
# 
#   result    = 0
#   bit_semn = 0
# 
# rezultatul nostru:                     0
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 44
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 12: 
#   opcode = 3 (ADD)
#   operand_a = -7
#   operand_b = 10
# 
#   result    = 3
#   bit_semn = 0
# 
# rezultatul nostru:                     3
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 45
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 13: 
#   opcode = 8 (POW)
#   operand_a = 11
#   operand_b = 4
# 
#   result    = 14641
#   bit_semn = 0
# 
# rezultatul nostru:                 14641
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 46
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 14: 
#   opcode = 0 (ZERO)
#   operand_a = -3
#   operand_b = 15
# 
#   result    = 0
#   bit_semn = 0
# 
# rezultatul nostru:                     0
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 47
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 15: 
#   opcode = 0 (ZERO)
#   operand_a = 7
#   operand_b = 13
# 
#   result    = 0
#   bit_semn = 0
# 
# rezultatul nostru:                     0
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 48
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 16: 
#   opcode = 0 (ZERO)
#   operand_a = 0
#   operand_b = 0
# 
#   result    = 0
#   bit_semn = 0
# 
# rezultatul nostru:                     0
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 49
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 17: 
#   opcode = 3 (ADD)
#   operand_a = -12
#   operand_b = 5
# 
#   result    = -7
#   bit_semn = 1
# 
# rezultatul nostru:                    -7
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 50
# Numar teste nereusite: 0
# ***********************************************************
# 
# Read from register location 18: 
#   opcode = 8 (POW)
#   operand_a = 1
#   operand_b = 12
# 
#   result    = 1
#   bit_semn = 0
# 
# rezultatul nostru:                     1
# rezultat corect
# 
# ***********************************************************
# Rezultate finale ale testelor:
# Numar teste trecute: 51
# Numar teste nereusite: 0
# ***********************************************************
# 
# 
# ***********************************************************
# ***  THIS IS A SELF-CHECKING TESTBENCH (YET). YOU DON'T ***
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION, ***
# ***            EVERYTHING IS AUTOMATED                  ***
# ***********************************************************
# 
# ** Note: $finish    : ../lab01_testbench-interface/instr_register_test.sv(138)
#    Time: 1056 ns  Iteration: 1  Instance: /top/test
# End time: 23:07:23 on Apr 22,2024, Elapsed time: 0:00:01
# Errors: 0, Warnings: 0
